GRAPH:
  CTYPE: igraph_t
  CALL: &%C%
  INCONV:
    IN, INOUT: shell_read_graph(&%C%, optarg);
    OUT: shell_arg_%C%=strdup(optarg);
  OUTCONV:
    OUT, INOUT: shell_write_graph(&%C%, shell_arg_%C%);

INTEGER:
  CTYPE: igraph_integer_t
  INCONV:
    IN: shell_read_integer(&%C%, optarg);

INTEGERPTR:
  CTYPE: igraph_integer_t
  CALL: &%C%
  INCONV:
    IN, INOUT: shell_read_integer(&%C%, optarg);
    OUT: shell_arg_%C%=strdup(optarg);
  OUTCONV:
    OUT, INOUT: shell_write_integer(%C%, shell_arg_%C%);

REAL:
  CTYPE: igraph_real_t
  INCONV:
    IN, INOUT: shell_read_real(&%C%, optarg);
  OUTCONV:
    OUT, INOUT: shell_write_real(%C%, shell_arg_%C%);

BOOLEAN:
  CTYPE: igraph_bool_t
  INCONV:
    IN, INOUT: shell_read_boolean(&%C%, optarg);
  OUTCONV:
    OUT, INOUT: shell_write_boolean(%C%, shell_arg_%C%);

ERROR:
  CTYPE: int

CONNECTEDNESS:
  CTYPE: igraph_connectedness_t

VECTOR:
  CTYPE: igraph_vector_t
  CALL: &%C%
  INCONV:
    IN,INOUT: shell_read_vector(&%C%, optarg);
    OUT: shell_arg_%C%=strdup(optarg);
  OUTCONV:
    OUT,INOUT: shell_write_vector(&%C%, shell_arg_%C%);

VECTOR_OR_0:
  CTYPE: igraph_vector_t
  CALL: &%C%

MATRIX:
  CTYPE: igraph_matrix_t
  CALL: &%C%

NULL:
  CALL: 0
  HEADER:

ATTRIBUTES:
  CALL: 0
