# TODO: rewrite it some time to use automake

srcdir = @srcdir@/src
top_srcdir = @top_srcdir@

JAVA_PACKAGE=@JAVA_PACKAGE@
JAVA_PACKAGE_DOT=@JAVA_PACKAGE_DOT@
JAVA_PACKAGE_UNDERSCORE=@JAVA_PACKAGE_UNDERSCORE@
JAVA_PACKAGE_SLASH=@JAVA_PACKAGE_SLASH@
VERSION=@VERSION@

JAVAC=@JAVAC@
JAVAH=@JAVAH@
JAVA=@JAVA@
JAR=@JAR@

LIBS=@JAVA_LIBS@ @IGRAPH_LIBS@
CFLAGS=@JAVA_CPPFLAGS@ @IGRAPH_CFLAGS@ -Isrc/c

GENERATED_JAVA_SRC=$(patsubst $(srcdir)/java/%.java.in,$(srcdir)/java/%.java,$(wildcard $(srcdir)/java/*.java.in))
JAVA_SRC=$(wildcard $(srcdir)/java/*.java) $(GENERATED_JAVA_SRC)
NATIVE_SRC=\
    $(srcdir)/c/$(JAVA_PACKAGE_UNDERSCORE)_Graph.c \
    $(srcdir)/c/$(JAVA_PACKAGE_UNDERSCORE)_enums.c
NATIVE_HEADERS=\
    $(srcdir)/c/$(JAVA_PACKAGE_UNDERSCORE)_enums.h
SRC=$(JAVA_SRC) $(NATIVE_SRC) $(NATIVE_HEADERS)

JAVA_TARGETS=$(patsubst $(srcdir)/java/%.java,@JAVA_PACKAGE_SLASH@/%.class,$(JAVA_SRC))
NATIVE_TARGETS=$(patsubst $(srcdir)/c/%.c,%.o,$(NATIVE_SRC))

DIST=$(SRC) Makefile.in Makefile manifest.in manifest configure

.PHONY: clean distclean

all: igraph-$(VERSION).jar

dist: igraph-$(VERSION).tar.gz

clean:
	rm -rf igraph-$(VERSION).jar @JNI_LIBRARY_FILENAME@ $(JAVA_TARGETS) $(NATIVE_TARGETS) $(JAVA_PACKAGE_UNDERSCORE)_Graph.[ch] $(top_srcdir)/src/c/$(JAVA_PACKAGE_UNDERSCORE)_Graph.c
	
distclean: clean
	-rm -f manifest src/c/config.h
	-rm -rf $(JAVA_PACKAGE_SLASH)
	-rm -f config.log config.status

igraph-$(VERSION).tar.gz: $(DIST)
	tar -cvvzf $@ $*

# Java archive file
igraph-$(VERSION).jar: @JNI_LIBRARY_FILENAME@ $(JAVA_TARGETS) manifest
	$(JAR) cfm $@ manifest @JAVA_PACKAGE_SLASH@/* @JNI_LIBRARY_FILENAME@

# Java native library
@JNI_LIBRARY_FILENAME@: $(NATIVE_TARGETS)
	$(CC) $(CFLAGS) $(LIBS) -o $@ $^

# Files generated by stimulus
src/java/Graph.java: $(srcdir)/java/Graph.java.in $(top_srcdir)/types-Java.def
	mkdir -p src/java
	$(PYTHON) $(top_srcdir)/../../tools/stimulus.py \
	  -f $(top_srcdir)/../functions.def \
	  -i $< -o $@ \
	  -t $(top_srcdir)/types-Java.def -l JavaJava
	  
$(JAVA_PACKAGE_UNDERSCORE)_Graph.c: $(srcdir)/c/$(JAVA_PACKAGE_UNDERSCORE)_Graph.c.in $(JAVA_PACKAGE_UNDERSCORE)_Graph.h $(top_srcdir)/types-C.def
	$(PYTHON) $(top_srcdir)/../../tools/stimulus.py \
	  -f $(top_srcdir)/../functions.def \
	  -i $< -o $@ \
	  -t $(top_srcdir)/types-C.def -l JavaC

# C compilation rule
%.o: $(srcdir)/c/%.c
	$(CC) $(CFLAGS) -o $@ -c $<

# Java compilation rule
$(JAVA_PACKAGE_SLASH)/%.class: $(srcdir)/java/%.java
	mkdir -p $(JAVA_PACKAGE_SLASH)
	${JAVAC} -cp . -sourcepath $(srcdir)/java $<
	mv $(patsubst %.java,%.class,$<) $(JAVA_PACKAGE_SLASH)

$(JAVA_PACKAGE_SLASH)/Graph.class: src/java/Graph.java $(JAVA_TARGETS)
	${JAVAC} -cp . $<
	mv $(patsubst %.java,%.class,$<) $(JAVA_PACKAGE_SLASH)

# Java header compilation rule
$(JAVA_PACKAGE_UNDERSCORE)_Graph.h: $(JAVA_PACKAGE_SLASH)/Graph.class
	${JAVAH} -classpath . -jni $(JAVA_PACKAGE).Graph

