<h2>igraph 0.5 Release Notes</h2>

<p class="news">
There are a lot of improvements and corrections in this version. Here
is a list of major changes, with links to the relevant sections of the 
documentation.
</p>

<h3><img src="images/icon_c.png"/> igraph as a platform</h3>

<p class="news">
We took some step towards turning igraph to an efficient platform for 
implementing graph algorithms. In particular, we have a set of 
<a href="doc-0.5/html/ch06.html">utility types</a> that support general
scientific computing and working with graphs: vectors, matrices,
stacks, queues, heaps, adjacency lists.
</p>

<h3><img src="images/icon_c.png"/>
    <img src="images/icon_r.png"/>
    <img src="images/icon_python.png"/>
    Graph isomorphism</h3>

<p class="news">
igraph includes the BLISS graph isomorphism algorithm and
implementation now. This and the improved VF2 implementation, which
can calculate subgraph isomorphism now, make igraph support the
bleeding edge of graph isomorphism algorithms. Many thanks to the
authors of BLISS. See the details in the 
<a href="doc-0.5/html/igraph-Isomorphism.html">Reference Manual</a>, in
the <a href="doc-0.5/R/graph.isomorphism.html">R documentation</a> or in the
<a href="/doc-0.5/python/igraph.GraphBase-class.html#isomorphic">Python
documentation.</a>
</p>

<h3><img src="images/icon_c.png"/>
    <img src="images/icon_r.png"/>
    <img src="images/icon_python.png"/>
    ARPACK for eigenvalue problems</h3>

<p class="news">
ARPACK is a library for solving large scale sparse eigenvalue
problems. In igraph it is very handy, as many centrality problems are
in fact eigenvalue problems: Kleinberg's hub and authority scores, 
PageRank, the leading eigenvector community detection algorithm are
some examples. Many Thanks to the authors of ARPACK and James Fowler,
who suggested to include it in igraph. 
</p>

<p class="news">
See the details in the
<a href="doc-0.5/html/igraph-Arpack.html">Reference Manual</a>, in the
<a href="doc-0.5/R/arpack.html">R documentation</a> or in the 
<a href="">Python documentation.</a>
</p>

<h3><img src="images/icon_python.png"/> Plotting from Python</h3>

<p class="news">
Plotting functionality based on the Cairo graphics library (so you need to
install python-cairo if you want to use it). Currently the following
objects can be plotted: graphs, adjacency matrices and dendrograms. Some
crude support for plotting histograms is also implemented. Plots can be
saved in PNG, SVG and PDF formats.
</p>

<p class="news">
See the details <a href="">in the documentation.</a>
</p>

<h3><img src="images/icon_c.png"/>
    <img src="images/icon_r.png"/>
    <img src="images/icon_python.png"/> Other bits</h3>

<h4><img src="images/icon_python.png"/> Shell interface in Python</h4>

<p class="news">
igraph can now be invoked by calling the script called
<code>igraph</code> from the command line. The script launches the
Python interpreter and automatically imports igraph functions into the
main namespace.
</p>

<h4><img src="images/icon_c.png"/>
    <img src="images/icon_r.png"/>
    <img src="images/icon_python.png"/>
    Create famous graphs easily</h4>

<p class="news">
Some classic graphs can be created by using their name now. This is
very handy if one needs a test graph quickly. See 
<a href=""><code>igraph_famous</code></a> (C), 
<a href=""><code>graph.famous()</code></a> (R) or 
<a href=""></a> (Python).
</p>

<h4><img src="images/icon_r.png"/> Create graphs using formulas in R</h4>

<p class="news">
The function 
<a href="doc-0.5/R/graph.formula.html"><code>graph.formula()</code></a>
provide a simple, concise way to create some small graphs. Numerous
examples are included in the 
<a href="doc-0.5/R/graph.formula.html">manual page.</a>
</p>

<h4><img src="images/icon_c.png"/>
    <img src="images/icon_r.png"/>
    <img src="images/icon_python.png"/>
    Improvements for weighted graphs</h4>

<p class="news">
Many functions were updated to handle weighted graphs: fast greedy
community detection (<a href="">C</a>, <a href="">R</a>, <a
href="">Python</a>), Page Rank (<a href="">C</a>, <a href="">R</a>, <a
href="">Python</a>), 
modularity calculation (<a href="">C</a>, <a href="">R</a>, <a
href="">Python</a>), the Fruchterman-Reingold layout algorithm (<a
href="">C</a>, <a href="">R</a>,
<a href="">Python</a>). 
</p>

<h4><img src="images/icon_c.png"/>
    <img src="images/icon_r.png"/>
    <img src="images/icon_python.png"/>
    Non-simple graphs</h4>

<p class="news">
Some functions were added and improved to handle non-simple graphs
(i.e. graphs with loop and/or multiple edges) better: testing that a
graph is simple (<a href="">C</a>, <a href="">R</a>, <a
href="">Python</a>), testing loop edges (<a href="">C</a>, <a
href="">R</a>, <a href="">Python</a>), 
testing multiple edges (<a href="">C</a>, <a href="">R</a>, <a
href="">Python</a>) and couting the multiplicity of 
edges (<a href="">C</a>, <a href="">R</a>, <a href="">Python</a>).
</p>

<h4><img src="images/icon_python.png"/> Pickling support in Python</h4>

<p class="news">
igraph Graph objects can be serialized (pickled) in Python.
</p>

<h4><img src="images/icon_c.png"/>
    <img src="images/icon_r.png"/>
    <img src="images/icon_python.png"/>
    The graphopt layout algorithm</h4>

<p class="news">
This is a nice force-based layout algorithm. See the documentation of
details (<a href="">C</a>, <a href="">R</a>, <a href="">Python</a>).
</p>

<h4><img src="images/icon_c.png"/>
    <img src="images/icon_r.png"/>
    <img src="images/icon_python.png"/>
    Support for the DOT file format</h4>

<p class="news">
igraph can now write graphs to files in the DOT format, used by
GraphViz. See documentation: <a href="">C</a>, <a href="">R</a>, <a
href="">Python</a>.
</p>

<h4><img src="images/icon_c.png"/>
    <img src="images/icon_r.png"/>
    <img src="images/icon_python.png"/>
    Dyad and triad census</h4>

<p class="news">
Classic social network analysis tools for classifying the dyads (<a
href="">C</a>, <a href="">R</a>, <a href="">Python</a>) and triads (<a
href="">C</a>, <a href="">R</a>, <a href="">Python</a>) of a network.
</p>

<h4><img src="images/icon_c.png"/>
    <img src="images/icon_r.png"/>
    <img src="images/icon_python.png"/>
    Biconnected components and articulation points</h4>

<p class="news">
igraph is now able to calculate biconnected components (<a
href="">C</a>, <a href="">R</a>, <a href="">Python</a>) 
and articulation points (<a href="">C</a>, <a href="">R</a>, <a
href="">Python</a>).
</p>

<h4><img src="images/icon_r.png"/> R graphics improvements</h4>

<p class="news">There were some minor improvements in R graphics. New graphical
parameters: <code>frame</code>, <code>asp</code>, <code>rescale</code>
and <code>shape</code> for different vertex shapes, right now only
circles and squares are supported. 
<a href=""><code>plot.igraph</code></a> has as
argument (<code>add</code>) to plot many graphs on the same plot,
maybe on top of each other. It also supports the <code>main</code> and
<code>sub</code> arguments now. <a href="">See more here.</a>
</p>

<h4><img src="images/icon_r.png"/> Always free memory in R after an interrupted calculation</h4>

<p class="news">
In previous igraph version, when a calculation was interrupted in R
running on MS Windows platforms, the allocated memory was not always
deallocated, but leaked away. igraph 0.5 correctly deallocates all 
memory on all platforms.
</p>

<h4><img src="images/icon_c.png"/>
    <img src="images/icon_r.png"/>
    <img src="images/icon_python.png"/>
    Estimating closeness and betweenness</h4>

<p class="news">
These measures can be quickly estimated by specifying an upper bound
for path lengths to be considered. This is useful for larger graphs,
for which the calculation takes a long time. See documentation for
closeness (<a href="">C</a>, <a href="">R</a>, <a href="">Python</a>),
betweenness (<a href="">C</a>, <a href="">R</a>, <a href="">Python</a>) and edge
betweenness (<a href="">C</a>, <a href="">R</a>, <a href="">Python</a>).
</p>

<h4><img src="images/icon_c.png"/>
    <img src="images/icon_r.png"/>
    <img src="images/icon_python.png"/>
    Functions for vertex similarity measures</h4>

<p class="news">
Two vertex similarity measures based on the number of common neighbors
are introduced, the Jarrard (<a href="">C</a>, <a href="">R</a>, <a
href="">Python</a>) and the Dice (<a href="">C</a>, <a href="">R</a>,
<a href="">Python</a>) similarities.
</p>

<h4><img src="images/icon_r.png"/> Proper warnings in R</h4>

<p class="news">
Up to now igraph warnings were dumped to the console when using the
igraph R package. In many cases this meant that they were effectively
lost. In the new version igraph warnings are converted to proper R
warnings.
</p>

<h4><img src="images/icon_c.png"/> Handle attributes from C</h4>

<p class="news">
An experimental C attribute interface was added. This allows using
graph/vertex/edge attributes when programming from C. <a href="">See
more here.</a>
</p>
