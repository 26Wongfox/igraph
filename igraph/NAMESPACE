
# The igraph interface

export(graph.empty, add.edges, add.vertices, delete.edges,
       delete.vertices, vcount, ecount, neighbors)

# Attributes

export(add.graph.attribute, remove.graph.attribute,
       get.graph.attribute, set.graph.attribute, g.a, "g.a<-",
       add.vertex.attribute, remove.vertex.attribute,
       get.vertex.attribute, set.vertex.attribute, v.a, "v.a<-",
       add.edge.attribute, remove.edge.attribute,
       get.edge.attribute, set.edge.attribute, e.a, "e.a<-")

# iterators

export(ii.create, ii.next, ii.prev, ii.end, ii.get.vertex.nei,
       ii.reset, ii.get.vertex, ii.get.from, ii.get.to, ii.get.edge)

# basic functions, printing

export(is.igraph, are.connected, print.igraph, summary.igraph, is.directed)

# structure generators

export(graph, graph.adjacency, graph.star, graph.tree, graph.lattice,
       graph.ring, graph.full)

# games

export(erdos.renyi.game, random.graph.game, degree.sequence.game,
       aging.prefatt.game, growing.random.game, barabasi.game)

# community structure

export(community.eb, community.cut, edge.type.matrix,
       modularity, community.eb2)

# conversion

export(get.adjacency, get.edgelist)

# fitting, other

export(power.law.fit, running.mean, igraph.sample)

# foreign formats

export(read.graph, write.graph, read.graph.edgelist,
       write.graph.edgelist, write.graph.lgl, read.graph.ncol,
       write.graph.ncol)

# layouts

export(layout.random, layout.circle, layout.fruchterman.reingold,
       layout.spring, layout.kamada.kawai)

# structural properties

export(subgraph, simplify, degree, degree.distribution, diameter,
       closeness, subcomponent, betweenness, bibcoupling, cocitation,
       shortest.paths, minimum.spanning.tree, edge.betweenness,
       get.shortest.paths, average.path.length, transitivity)

# plotting

export(plot.igraph, tkplot)

# components

export(clusters, cluster.distribution, is.connected)

# centrality

export(evcent)

# dynamics measurement

export(measure.dynamics.idage)

