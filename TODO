
o R interface: curved edges in plots (tkplot and plot)
o igraph_vs_seq bug, the last node is omitted???
o R interface: implement max.print option
* R interface: uniform 'y' coordinates in plot.igraph and tkplot
o attribute support in to_undirected
o calculate the actual maximum flow
o find a way for writing equations in DocBook.
o read and write non-structural info from/to GraphML files
  read:
    - error handling
    - handle different types of attributes properly (eg. boolean)
o the number of isomorphism classes for a given graph size
o index in pdf manual
o PAJEK import improvements: 
  - affiliation networks, AFFIL.NET: *Vertices n n1 
  - multiple edge sets in the same graph (?), Sampson.net, Multi.net, 
    SampsonL.net
  - color conversion, see colors in the Pajek manual
o rewite add_edges, add_vertices, they're a mess
o better looking graphs in 3D in the R interface
o better random number generator handling (init with seed, etc...)
o uniform graph operators (union, intersection, etc...)
o attribute handling for operators
o merging layouts properly, multicompartmental layout functions
o eccentricity
o bi-connected components (or k connected component), articulations points,
  k-cores
o connectedness, efficiency, hierarchy, lubness

o topological equaivalence of graphs (hard)
o make possible building in separate directory (make check, r package,
  make dist do not work)
o write tutorial
o add some iterators: in-, pre-, post-order, depth-first, breadth-first
  search, iterators based on attributes etc.
o add methods for reading & saving a file together with its attributes
o add conversion methods for different file formats
o community detection algorithms
o add data sets to the R package
o add automatic tests, add valgrind option to tests (?)
o make docs look better: index, section tocs
o make better and faster doxrox engine
o create man pages
o implement IGRAPH_STRONG in igraph_decompose
o top-down and radial layout algorithm for tree graphs
o Hamilton and Euler circles/paths
o method to turn the edges to the opposite direction in a graph
o selective copy: copy only selected edges with attributes
o method for vertex and edge to return all attrs as a hash

Python interface:
o Add Python interface to igraph_callaway_traits_game,
  igraph_barabasi_aging_game, igraph_recent_degree_aging_game
o Add Python edge/vertex selector support
o iterator over all components
o iterator over all circles
o make del operator work for attributes
o make in-place addition and subtraction operators NOT copy the graph if
  a disjoint union or difference is taken
