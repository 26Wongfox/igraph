
Needed for 0.2:

o range checks for vertex/edge sequences in R
o check reading and writing (big) files from the R interface, possibly
  rewrite
o document bison requirements
o repair simplify
o add references to SNA, paper by Carter
o R interface to all (sensible) functions
o proper documentation (docbook & R) for all (sensible) functions
o check importing pajek files
o write Pajek file
o read and write non-structural info from/to GraphML files
o edge seq argument to delete_edges
o Add Python interface to igraph_callaway_traits_game,
  igraph_barabasi_aging_game, igraph_recent_degree_aging_game
o add attribute support to spanning tree functions

Other bits:

o PAJEK import improvements: 
  - affiliation networks, AFFIL.NET: *Vertices n n1 
  - multiple edge sets in the same graph (?), Sampson.net, Multi.net, 
    SampsonL.net
  - no newline at the end of the last line, url.net
  - color conversion, see colors in the Pajek manual
o rewite add_edges, add_vertices, delete_edges, delete_vertices,
  they're a mess
o better looking graphs in 3D in the R interface
o better random number generator handling (init with seed, etc...)
o uniform graph operators (union, intersection, etc...)
o attribute handling for operators
o merging layouts properly, multicompartmental layout functions
o eccentricity
o bi-connected components (or k connected component), articulations points,
  cliques, k-cores
o connectedness, efficiency, hierarchy, lubness

o topological equaivalence of graphs (hard)
o make possible building in separate directory (make check, r package,
  make dist do not work)
o write tutorial
o add some iterators: in-, pre-, post-order, depth-first, breadth-first
  search, iterators based on attributes etc.
o add methods for reading & saving a file together with its attributes
o add conversion methods for different file formats
o community detection algorithms
o add data sets to the R package
o add automatic tests, add valgrind option to tests (?)
o make docs look better: index, section tocs
o make better and faster doxrox engine
o create man pages
o implement IGRAPH_STRONG in igraph_decompose
o top-down and radial layout algorithm for tree graphs
o Hamilton and Euler circles/paths
o method to turn the edges to the opposite direction in a graph
o Python inteface: some useful iterators:
  o iterator over all components
  o iterator over all circles
o selective copy: copy only selected edges with attributes
o method for vertex and edge to return all attrs as a hash
